{
  "version": 3,
  "sources": ["../src/investments.ts", "../src/news.ts"],
  "sourcesContent": ["window.addEventListener(\"DOMContentLoaded\", function () {\n    //check if we are comming from strategy page\n    const fromStrategyPageLS = window.localStorage.getItem(\"nav-to-investments\");\n    document.querySelectorAll<HTMLDivElement>(\"[nav-from-strategy]\").forEach((item) => {\n      if (fromStrategyPageLS === item.getAttribute(\"nav-from-strategy\")) {\n        document.querySelector<HTMLDivElement>(\"[strategy-category]\")?.click();\n        item.click();\n        setTimeout(() => {\n          item.scrollIntoView({\n            behavior: \"smooth\", // Use smooth scrolling\n            block: \"center\", // Scroll to the center of the element\n            inline: \"nearest\", // Scroll to the nearest edge of the element\n          });\n        }, 700);\n        window.localStorage.removeItem(\"nav-to-investments\");\n      }\n    });\n  });\n  ", "const newsPageNo = window.localStorage.getItem(\"searchParamNewsPageNo\");\nif (newsPageNo && Number(newsPageNo) > 0 && Number(newsPageNo) < 3) {\n  scrollToNews();\n  window.localStorage.removeItem(\"searchParamNewsPageNo\");\n}\n\nconst newsWrapper = document.querySelector<HTMLDivElement>(\"[get-no-of-items]\");\n\n// Create a new MutationObserver instance to track when fs-cmsload adds the news\nconst observer = new MutationObserver(function (mutations) {\n  mutations.forEach(function (mutation) {\n    if (mutation.type === \"childList\" && mutation.addedNodes.length > 0) {\n      //When this is triggered fs-cmsload has added the remaining members\n      scrollToNews();\n    }\n  });\n});\n\n// Configure and start observing the teamWrapper\nconst observerConfig = { childList: true };\nnewsWrapper && observer.observe(newsWrapper, observerConfig);\n\nfunction scrollToNews() {\n  // check if we come from search and we have local storage param\n  const hasLocalStorageDataNews =\n    window.localStorage.getItem(\"searchParamNews\");\n  const newsItems = document.querySelectorAll<HTMLDivElement>(\"[news-item]\");\n  // if we have local storage param we find desired div and simulate click to open drawer\n  hasLocalStorageDataNews &&\n    newsItems.forEach((newsItem) => {\n      const newsItemSlug = newsItem.getAttribute(\"news-item\");\n      if (newsItemSlug === hasLocalStorageDataNews) {\n        newsItem.scrollIntoView({\n          behavior: \"smooth\", // Use smooth scrolling\n          block: \"start\", // Scroll to the top of the element\n          inline: \"nearest\", // Scroll to the nearest edge of the element\n        });\n        newsItem.click();\n        window.localStorage.removeItem(\"searchParamNews\");\n      }\n    });\n}\n"],
  "mappings": "mBAAA,OAAO,iBAAiB,mBAAoB,UAAY,CAEpD,IAAMA,EAAqB,OAAO,aAAa,QAAQ,oBAAoB,EAC3E,SAAS,iBAAiC,qBAAqB,EAAE,QAASC,GAAS,CAC7ED,IAAuBC,EAAK,aAAa,mBAAmB,IAC9D,SAAS,cAA8B,qBAAqB,GAAG,MAAM,EACrEA,EAAK,MAAM,EACX,WAAW,IAAM,CACfA,EAAK,eAAe,CAClB,SAAU,SACV,MAAO,SACP,OAAQ,SACV,CAAC,CACH,EAAG,GAAG,EACN,OAAO,aAAa,WAAW,oBAAoB,EAEvD,CAAC,CACH,CAAC,ECjBH,IAAMC,EAAa,OAAO,aAAa,QAAQ,uBAAuB,EAClEA,GAAc,OAAOA,CAAU,EAAI,GAAK,OAAOA,CAAU,EAAI,IAC/DC,EAAa,EACb,OAAO,aAAa,WAAW,uBAAuB,GAGxD,IAAMC,EAAc,SAAS,cAA8B,mBAAmB,EAGxEC,EAAW,IAAI,iBAAiB,SAAUC,EAAW,CACzDA,EAAU,QAAQ,SAAUC,EAAU,CAChCA,EAAS,OAAS,aAAeA,EAAS,WAAW,OAAS,GAEhEJ,EAAa,CAEjB,CAAC,CACH,CAAC,EAGKK,EAAiB,CAAE,UAAW,EAAK,EACzCJ,GAAeC,EAAS,QAAQD,EAAaI,CAAc,EAE3D,SAASL,GAAe,CAEtB,IAAMM,EACJ,OAAO,aAAa,QAAQ,iBAAiB,EACzCC,EAAY,SAAS,iBAAiC,aAAa,EAEzED,GACEC,EAAU,QAASC,GAAa,CACTA,EAAS,aAAa,WAAW,IACjCF,IACnBE,EAAS,eAAe,CACtB,SAAU,SACV,MAAO,QACP,OAAQ,SACV,CAAC,EACDA,EAAS,MAAM,EACf,OAAO,aAAa,WAAW,iBAAiB,EAEpD,CAAC,CACL",
  "names": ["fromStrategyPageLS", "item", "newsPageNo", "scrollToNews", "newsWrapper", "observer", "mutations", "mutation", "observerConfig", "hasLocalStorageDataNews", "newsItems", "newsItem"]
}
